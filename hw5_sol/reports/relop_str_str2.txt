TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: EQ        LEXEME: =					TOKEN: EQ        LEXEME: =
REL_OP -> =							REL_OP -> =
BIN_OP -> REL_OP						BIN_OP -> REL_OP
TOKEN: STRCONST  LEXEME: "five"					TOKEN: STRCONST  LEXEME: "five"
CONST -> STRCONST						CONST -> STRCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: STRCONST  LEXEME: "five"					TOKEN: STRCONST  LEXEME: "five"
CONST -> STRCONST						CONST -> STRCONST
EXPR -> CONST							EXPR -> CONST
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR							START -> EXPR

---- Completed parsing ----					---- Completed parsing ----


Value of the expression is: t					Value of the expression is: t

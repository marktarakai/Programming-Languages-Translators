TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR   LEXEME: let*					TOKEN: LETSTAR   LEXEME: let*

___Entering new scope...					___Entering new scope...

TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon						ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: bob					TOKEN: IDENT     LEXEME: bob
TOKEN: INTCONST  LEXEME: 7					TOKEN: INTCONST  LEXEME: 7
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding bob to symbol table					___Adding bob to symbol table
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: fish					TOKEN: IDENT     LEXEME: fish
TOKEN: INTCONST  LEXEME: 10					TOKEN: INTCONST  LEXEME: 10
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding fish to symbol table					___Adding fish to symbol table
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: sandwich				TOKEN: IDENT     LEXEME: sandwich
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: LETSTAR   LEXEME: let*					TOKEN: LETSTAR   LEXEME: let*

___Entering new scope...					___Entering new scope...

TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
ID_EXPR_LIST -> epsilon						ID_EXPR_LIST -> epsilon
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IDENT     LEXEME: x					TOKEN: IDENT     LEXEME: x
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: SUB       LEXEME: -					TOKEN: SUB       LEXEME: -
ARITH_OP -> -							ARITH_OP -> -
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: IDENT     LEXEME: bob					TOKEN: IDENT     LEXEME: bob
EXPR -> IDENT							EXPR -> IDENT
TOKEN: IDENT     LEXEME: fish					TOKEN: IDENT     LEXEME: fish
EXPR -> IDENT							EXPR -> IDENT
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding x to symbol table					___Adding x to symbol table
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: IF        LEXEME: if					TOKEN: IF        LEXEME: if
TOKEN: IDENT     LEXEME: x					TOKEN: IDENT     LEXEME: x
EXPR -> IDENT							EXPR -> IDENT
TOKEN: INTCONST  LEXEME: 100					TOKEN: INTCONST  LEXEME: 100
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
TOKEN: INTCONST  LEXEME: 200					TOKEN: INTCONST  LEXEME: 200
CONST -> INTCONST						CONST -> INTCONST
EXPR -> CONST							EXPR -> CONST
IF_EXPR -> if EXPR EXPR EXPR					IF_EXPR -> if EXPR EXPR EXPR
PARENTHESIZED_EXPR -> IF_EXPR					PARENTHESIZED_EXPR -> IF_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR				LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR

___Exiting scope...						___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR					PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )			ID_EXPR_LIST -> ID_EXPR_LIST ( IDENT EXPR )
___Adding sandwich to symbol table				___Adding sandwich to symbol table
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +					TOKEN: ADD       LEXEME: +
ARITH_OP -> +							ARITH_OP -> +
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: LPAREN    LEXEME: (					TOKEN: LPAREN    LEXEME: (
TOKEN: ADD       LEXEME: +					TOKEN: ADD       LEXEME: +
ARITH_OP -> +							ARITH_OP -> +
BIN_OP -> ARITH_OP						BIN_OP -> ARITH_OP
TOKEN: IDENT     LEXEME: bob					TOKEN: IDENT     LEXEME: bob
EXPR -> IDENT							EXPR -> IDENT
TOKEN: IDENT     LEXEME: fish					TOKEN: IDENT     LEXEME: fish
EXPR -> IDENT							EXPR -> IDENT
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
TOKEN: IDENT     LEXEME: sandwich				TOKEN: IDENT     LEXEME: sandwich
EXPR -> IDENT							EXPR -> IDENT
ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR				ARITHLOGIC_EXPR -> BIN_OP EXPR EXPR
PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR				PARENTHESIZED_EXPR -> ARITHLOGIC_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR				LET_EXPR -> let* ( ID_EXPR_LIST ) EXPR

___Exiting scope...						___Exiting scope...

PARENTHESIZED_EXPR -> LET_EXPR					PARENTHESIZED_EXPR -> LET_EXPR
TOKEN: RPAREN    LEXEME: )					TOKEN: RPAREN    LEXEME: )
EXPR -> ( PARENTHESIZED_EXPR )					EXPR -> ( PARENTHESIZED_EXPR )
START -> EXPR							START -> EXPR

---- Completed parsing ----					---- Completed parsing ----


Value of the expression is: 117					Value of the expression is: 117
